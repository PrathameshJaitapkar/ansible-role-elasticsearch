---
# tasks file for ansible-role-elasticsearch
- name: 'Gather OS specific variables'
  include_vars: '{{ item }}'
  with_first_found:
    - '{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml'
    - '{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml'
    - '{{ ansible_distribution|lower }}.yml'
    - '{{ ansible_os_family|lower }}.yml'

- set_fact:
    __elasticsearch_major_minor_version: "{{ elasticsearch_major_version }}.{{ elasticsearch_minor_version }}"

- name: Set APT Repo for 5.x versions of ES
  set_fact:
    __elasticsearch_repo_uri: 'https://artifacts.elastic.co/packages/{{ elasticsearch_major_version }}.x/apt'
  when: '{{ elasticsearch_major_version >= 5 }}'

- name: Set APT Repo for 2.x or lower versions of ES
  set_fact:
    __elasticsearch_repo_uri: 'http://packages.elastic.co/elasticsearch/{{ elasticsearch_major_version }}.x/debian'
  when: '{{ elasticsearch_major_version < 5 }}'

- name: Calculate ES_HEAP_SIZE if not explicitly set
  set_fact:
    elasticsearch_heap_size: '{{ (ansible_memtotal_mb // 2 - 1024 < 31744) | ternary(ansible_memtotal_mb // 2 - 1024 , 31744) }}m'
  when: '{{ elasticsearch_heap_size is not defined }}'

- name: Ensure apt-transport-https is available
  apt:
    name: apt-transport-https
    state: present
  when: "__elasticsearch_repo_uri.startswith('https')"

- name: Trust Elasticsearch' packaging key
  apt_key:
    data: "{{ lookup('file', 'files/elasticsearch_packaging_key.asc') }}"
    id: D88E42B4
    state: present

- name: Add elasticsearch repository
  apt_repository:
    filename: elasticsearch
    repo: 'deb {{ __elasticsearch_repo_uri }} stable main'
    state: present

- name: Install Elasticsearch
  apt:
    name: 'elasticsearch={{ __elasticsearch_major_minor_version }}.*'
    state: present
  notify:
    - elasticsearch restart needed

- name: Create data folders if necessary
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ elasticsearch_user }}'
    group: '{{ elasticsearch_group }}'
    mode: 0755
  when: '{{ elasticsearch_path_data is defined }}'
  with_items: '{{ (elasticsearch_path_data | default(omit)).split(",") }}'

- name: Create logs folder if necessary
  file:
    path: '{{ elasticsearch_path_logs }}'
    state: directory
    owner: '{{ elasticsearch_user }}'
    group: '{{ elasticsearch_group }}'
    mode: 0755
  when: '{{ elasticsearch_path_logs is defined }}'

- name: Configure elasticsearch.yml (2.x)
  template:
    src: elasticsearch-2.x.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
    backup: yes
  notify:
    - elasticsearch restart needed
  when: '{{ elasticsearch_major_version == 2 }}'

- name: Configure elasticsearch.yml (5.x >=)
  template:
    src: elasticsearch-5.x.yml.j2
    dest: /etc/elasticsearch/elasticsearch.yml
    backup: yes
  notify:
    - elasticsearch restart needed
  when: '{{ elasticsearch_major_version >= 5 }}'

- name: Configure elasticsearch default file (2.x)
  template:
    src: default-2.x.j2
    dest: /etc/default/elasticsearch
    backup: yes
  notify:
    - elasticsearch restart needed
  when: '{{ elasticsearch_major_version == 2 }}'

# This is now the preferred way to configure the jvm
# See https://www.elastic.co/guide/en/elasticsearch/reference/master/setting-system-settings.html#es-java-opts
- name: Copy jvm.options File for instance (5.x >=)
  template: 
    src: jvm.options.j2 
    dest: /etc/elasticsearch/jvm.options
    owner: '{{ elasticsearch_user }}'
    group: '{{ elasticsearch_group }}'
    mode: 0644
  notify: elasticsearch restart needed
  when: '{{ elasticsearch_major_version >= 5 }}'

- name: Configure PAM limits for Elasticsearch
  pam_limits:
    domain: elasticsearch
    limit_type: "{{ item.0 }}"
    limit_item: "{{ item.1 }}"
    value: "{{ item.2 }}"
  with_items:
    - [['-', 'nofile', '{{ elasticsearch_max_open_files }}']]
    - [['-', 'memlock', '{{ elasticsearch_max_locked_memory }}']]
    - [['-', 'nproc', '{{ elasticsearch_max_num_threads }}']]

- block:
  - name: Configure nofile for Elasticsearch in systemd unit file
    lineinfile:
      dest: /usr/lib/systemd/system/elasticsearch.service
      insertafter: '^\[Service\]'
      regexp: '^#?LimitNOFILE='
      line: 'LimitNOFILE={{ elasticsearch_max_open_files }}'
      state: present
    notify:
      - reload systemd unit files

  - name: Configure memlock for Elasticsearch in systemd unit file
    lineinfile:
      dest: /usr/lib/systemd/system/elasticsearch.service
      insertafter: '^\[Service\]'
      regexp: '^#?LimitMEMLOCK='
      line: "LimitMEMLOCK={{ (elasticsearch_max_locked_memory == 'unlimited') | ternary('infinity', elasticsearch_max_locked_memory) }}"
      state: present
    notify:
      - reload systemd unit files

  when: "_elasticsearch_service_method == 'systemd'"

- name: Configure vm.max_map_count via sysctl
  sysctl:
    name: vm.max_map_count
    value: '{{ elasticsearch_max_map_count }}'
    sysctl_set: yes
    state: present

- name: Enable the Elasticsearch service
  service:
    name: elasticsearch
    enabled: yes

# vim:ft=ansible:
